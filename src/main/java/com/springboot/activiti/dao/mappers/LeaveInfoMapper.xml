<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.es.act.dao.LeaveInfoDao">
    <!-- LeaveInfo的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_LeaveInfo_Map" type="com.es.act.pojo.domain.LeaveInfo">
        <id column="ID" property="id" />
        <result column="STATUS" property="status" />
        <result column="LEAVE_NAME" property="leaveName" />
        <result column="LEAVE_TYPE" property="leaveType" />
        <result column="DEL_STATUS" property="delStatus" />
        <result column="LEAVE_MSG" property="leaveMsg" />
        <result column="CREATE_TIME" property="createTime" />
        <result column="UPDATE_TIME" property="updateTime" />
        <result column="LEAVE_USER_FK_CODE" property="leaveUserFkCode" />
        <result column="FK_CODE" property="fkCode" />
        <result column="PROCESS_ID" property="processId" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:leave_info的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="leave_info_Column">
        leave_info.ID as ID
        ,leave_info.STATUS as STATUS
        ,leave_info.LEAVE_NAME as LEAVE_NAME
        ,leave_info.LEAVE_TYPE as LEAVE_TYPE
        ,leave_info.DEL_STATUS as DEL_STATUS
        ,leave_info.LEAVE_MSG as LEAVE_MSG
        ,leave_info.CREATE_TIME as CREATE_TIME
        ,leave_info.UPDATE_TIME as UPDATE_TIME
        ,leave_info.LEAVE_USER_FK_CODE as LEAVE_USER_FK_CODE
        ,leave_info.FK_CODE as FK_CODE
        ,leave_info.PROCESS_ID as PROCESS_ID
    </sql>

    <!--获得类名为:LeaveInfo对应的数据库表的数据总行数 -->
    <select id="getLeaveInfoRowCount" parameterType="com.es.app_common.util.Assist" resultType="java.lang.Long">
        select count(ID) from leave_info
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:LeaveInfo对应数据库中表的数据集合 -->
    <select id="selectLeaveInfo" parameterType="com.es.app_common.util.Assist"  resultMap="result_LeaveInfo_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="leave_info_Column" /> 
            </otherwise>
        </choose>
        from leave_info
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT ID as primary_key FROM leave_info
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=leave_info.ID
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个LeaveInfo对象,以参数LeaveInfo对象中不为空的属性作为条件进行查询-->
    <select id="selectLeaveInfoByObj" parameterType="com.es.act.pojo.domain.LeaveInfo" resultMap="result_LeaveInfo_Map">
        select 
            <include refid="leave_info_Column" /> 
        from leave_info
        <where>
            <if test="processId != null "> and leave_info.PROCESS_ID = #{processId}</if>
            <if test="fkCode != null "> and leave_info.FK_CODE = #{fkCode}</if>
            <if test="leaveUserFkCode != null "> and leave_info.LEAVE_USER_FK_CODE = #{leaveUserFkCode}</if>
            <if test="updateTime != null "> and leave_info.UPDATE_TIME = #{updateTime}</if>
            <if test="createTime != null "> and leave_info.CREATE_TIME = #{createTime}</if>
            <if test="leaveMsg != null "> and leave_info.LEAVE_MSG = #{leaveMsg}</if>
            <if test="delStatus != null "> and leave_info.DEL_STATUS = #{delStatus}</if>
            <if test="leaveType != null "> and leave_info.LEAVE_TYPE = #{leaveType}</if>
            <if test="leaveName != null "> and leave_info.LEAVE_NAME = #{leaveName}</if>
            <if test="status != null "> and leave_info.STATUS = #{status}</if>
            <if test="id != null "> and leave_info.ID = #{id}</if>
        </where>
    </select> 

    <!-- 通过LeaveInfo的id获得对应数据库中表的数据对象-->
    <select id="selectLeaveInfoById" parameterType="java.lang.Long" resultMap="result_LeaveInfo_Map">
        select 
            <include refid="leave_info_Column" /> 
        from leave_info
        where leave_info.ID = #{id}
    </select> 

    <!-- 将LeaveInfo插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertLeaveInfo" parameterType="com.es.act.pojo.domain.LeaveInfo">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into leave_info(ID,STATUS,LEAVE_NAME,LEAVE_TYPE,DEL_STATUS,LEAVE_MSG,CREATE_TIME,UPDATE_TIME,LEAVE_USER_FK_CODE,FK_CODE,PROCESS_ID) 
        values(#{id},#{status},#{leaveName},#{leaveType},#{delStatus},#{leaveMsg},#{createTime},#{updateTime},#{leaveUserFkCode},#{fkCode},#{processId})
    </insert>

    <!-- 将LeaveInfo中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyLeaveInfo" parameterType="com.es.act.pojo.domain.LeaveInfo">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into leave_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">ID,</if>
            <if test="status != null">STATUS,</if>
            <if test="leaveName != null">LEAVE_NAME,</if>
            <if test="leaveType != null">LEAVE_TYPE,</if>
            <if test="delStatus != null">DEL_STATUS,</if>
            <if test="leaveMsg != null">LEAVE_MSG,</if>
            <if test="createTime != null">CREATE_TIME,</if>
            <if test="updateTime != null">UPDATE_TIME,</if>
            <if test="leaveUserFkCode != null">LEAVE_USER_FK_CODE,</if>
            <if test="fkCode != null">FK_CODE,</if>
            <if test="processId != null">PROCESS_ID,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="status != null"> #{status},</if>
            <if test="leaveName != null"> #{leaveName},</if>
            <if test="leaveType != null"> #{leaveType},</if>
            <if test="delStatus != null"> #{delStatus},</if>
            <if test="leaveMsg != null"> #{leaveMsg},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="leaveUserFkCode != null"> #{leaveUserFkCode},</if>
            <if test="fkCode != null"> #{fkCode},</if>
            <if test="processId != null"> #{processId},</if>
        </trim>
    </insert>

    <!-- 将LeaveInfo批量插入到对应数据库的表中-->
    <insert id="insertLeaveInfoByBatch" parameterType="ArrayList">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into leave_info(ID,STATUS,LEAVE_NAME,LEAVE_TYPE,DEL_STATUS,LEAVE_MSG,CREATE_TIME,UPDATE_TIME,LEAVE_USER_FK_CODE,FK_CODE,PROCESS_ID) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.status},#{item.leaveName},#{item.leaveType},#{item.delStatus},#{item.leaveMsg},#{item.createTime},#{item.updateTime},#{item.leaveUserFkCode},#{item.fkCode},#{item.processId})
        </foreach>
    </insert>

    <!-- 通过LeaveInfo的id将数据库表中对应的数据删除-->
    <delete id="deleteLeaveInfoById" parameterType="java.lang.Long">
        delete from leave_info
        where ID = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将LeaveInfo对应的数据库表的数据删除-->
    <delete id="deleteLeaveInfo" parameterType="com.es.app_common.util.Assist">
        delete from leave_info
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过LeaveInfo的id将LeaveInfo的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateLeaveInfoById" parameterType="com.es.act.pojo.domain.LeaveInfo">
        update leave_info set
            STATUS=#{status}
            ,LEAVE_NAME=#{leaveName}
            ,LEAVE_TYPE=#{leaveType}
            ,DEL_STATUS=#{delStatus}
            ,LEAVE_MSG=#{leaveMsg}
            ,CREATE_TIME=#{createTime}
            ,UPDATE_TIME=#{updateTime}
            ,LEAVE_USER_FK_CODE=#{leaveUserFkCode}
            ,FK_CODE=#{fkCode}
            ,PROCESS_ID=#{processId}
        where ID=#{id}
    </update>

    <!-- 通过LeaveInfo的id将LeaveInfo中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyLeaveInfoById" parameterType="com.es.act.pojo.domain.LeaveInfo">
        update leave_info
        <set>
            <if test="status != null">
                STATUS=#{status},
            </if>
            <if test="leaveName != null">
                LEAVE_NAME=#{leaveName},
            </if>
            <if test="leaveType != null">
                LEAVE_TYPE=#{leaveType},
            </if>
            <if test="delStatus != null">
                DEL_STATUS=#{delStatus},
            </if>
            <if test="leaveMsg != null">
                LEAVE_MSG=#{leaveMsg},
            </if>
            <if test="createTime != null">
                CREATE_TIME=#{createTime},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME=#{updateTime},
            </if>
            <if test="leaveUserFkCode != null">
                LEAVE_USER_FK_CODE=#{leaveUserFkCode},
            </if>
            <if test="fkCode != null">
                FK_CODE=#{fkCode},
            </if>
            <if test="processId != null">
                PROCESS_ID=#{processId},
            </if>
        </set>
        where ID=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将LeaveInfo中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateLeaveInfo" parameterType="map">
        update leave_info
        <set>
                ID=#{enti.id},
                STATUS=#{enti.status},
                LEAVE_NAME=#{enti.leaveName},
                LEAVE_TYPE=#{enti.leaveType},
                DEL_STATUS=#{enti.delStatus},
                LEAVE_MSG=#{enti.leaveMsg},
                CREATE_TIME=#{enti.createTime},
                UPDATE_TIME=#{enti.updateTime},
                LEAVE_USER_FK_CODE=#{enti.leaveUserFkCode},
                FK_CODE=#{enti.fkCode},
                PROCESS_ID=#{enti.processId},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将LeaveInfo中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyLeaveInfo" parameterType="map">
        update leave_info
        <set>
            <if test="enti.id != null">
                ID=#{enti.id},
            </if>
            <if test="enti.status != null">
                STATUS=#{enti.status},
            </if>
            <if test="enti.leaveName != null">
                LEAVE_NAME=#{enti.leaveName},
            </if>
            <if test="enti.leaveType != null">
                LEAVE_TYPE=#{enti.leaveType},
            </if>
            <if test="enti.delStatus != null">
                DEL_STATUS=#{enti.delStatus},
            </if>
            <if test="enti.leaveMsg != null">
                LEAVE_MSG=#{enti.leaveMsg},
            </if>
            <if test="enti.createTime != null">
                CREATE_TIME=#{enti.createTime},
            </if>
            <if test="enti.updateTime != null">
                UPDATE_TIME=#{enti.updateTime},
            </if>
            <if test="enti.leaveUserFkCode != null">
                LEAVE_USER_FK_CODE=#{enti.leaveUserFkCode},
            </if>
            <if test="enti.fkCode != null">
                FK_CODE=#{enti.fkCode},
            </if>
            <if test="enti.processId != null">
                PROCESS_ID=#{enti.processId},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>